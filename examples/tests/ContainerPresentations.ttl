@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix stage: <http://localhost:8080/stage#>.
@prefix elmo: <http://bp4mc2.org/elmo/def#>.
@prefix html: <http://www.w3.org/1999/xhtml/vocab#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix yed: <http://bp4mc2.org/yed#>.
@prefix gn: <http://www.geonames.org/ontology#>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.

stage:ContainerPresentations a elmo:Representation;
	elmo:url-pattern "/query/containers$";
	elmo:index "1";
	elmo:contains stage:HeaderAppearance;
	elmo:contains stage:NavbarSearchAppearance;
    elmo:contains stage:FooterAppearance;
	elmo:appearance elmo:HtmlAppearance;
	elmo:data [
		rdfs:label "Content of containers"@en;
		rdfs:label "Inhoud van de containers"@nl;
		elmo:html '''
			<p><a class="btn btn-default" href="/ldt/query/simple-vocabulary">Show simple container vocabulary page</a></p>
			<p><a class="btn btn-default" href="/ldt/query/simple-vocabulary.yed">Show simple container vocabulary diagram</a></p>
			<p><a class="btn btn-default" href="/ldt/query/simple-vocabulary-model">Show simple container vocabulary model</a></p>
			<p><a class="btn btn-default" href="/ldt/query/uploaded-vocabulary">Show uploaded vocabulary</a></p>
			<p><a class="btn btn-default" href="/ldt/query/uploaded-model">Show uploaded vocabulary model</a></p>
			<p><a class="btn btn-default" href="/ldt/query/uploaded-vocabulary.yed">Show uploaded vocabulary yEd model</a></p>
			<p><a class="btn btn-default" href="/ldt/query/uploaded-shapes">Show uploaded shapes</a></p>
			<p><a class="btn btn-default" href="/ldt/query/uploaded-shapes-model">Show uploaded shapes model</a></p>
			<p><a class="btn btn-default" href="/ldt/query/uploaded-shapes.yed">Show uploaded shapes yED model</a></p>
			<p><a class="btn btn-default" href="/ldt/query/archicomponents">Show archi container</a></p>
			<p><a class="btn btn-default" href="/ldt/query/simple-container-content.yed">Show simple container graph</a></p>
			<p><a class="btn btn-default" href="/ldt/query/simple-container-concept">Show simple container concepts</a></p>
			<p><a class="btn btn-default" href="/ldt/query/simple-container-content">Show simple container content</a></p>
			<p><a class="btn btn-default" href="/ldt/query/simple-container-total-graph">Show simple container total graph</a></p>
			<p><a class="btn btn-default" href="/ldt/query/simple-container-geo">Show simple container geo</a></p>
		''';
	]
.

stage:SimpleContainer a elmo:Representation;
	elmo:url-pattern "/query/simple-vocabulary(|.yed)$";
	elmo:appearance elmo:VocabularyAppearance;
	elmo:query stage:SimpleContainerQuery;
.

stage:SimpleContainerTest a elmo:Representation;
  elmo:url-pattern "/query/voctest(|.yed)$";
  elmo:appearance elmo:VocabularyAppearance;
  elmo:query '''
       PREFIX sh: <http://www.w3.org/ns/shacl#>
        PREFIX dctype: <http://purl.org/dc/dcmitype/>
        prefix req: <http://data.ontwikkeling.pdok.nl/gco/id/requirement/>
        CONSTRUCT {
            ?shape ?shapepred ?shapeobj.
            ?shape sh:property ?prop.
            ?prop ?proppred ?propobj.
        }
        WHERE {
            GRAPH <http://bp4mc2.org/id/dataset/requirements> {
                ?shape ?shapepred ?shapeobj.
                OPTIONAL {
                  ?shape sh:property ?prop.
                  ?prop ?proppred ?propobj.
                }
                FILTER (?shape = req:Concept
                || ?shape = req:ExternConcept
                )
            }
        }
  ''';
.

stage:SimpleContainerModel a elmo:Representation;
	elmo:url-pattern "/query/simple-vocabulary-model$";
	elmo:appearance elmo:ModelAppearance;
	elmo:query stage:SimpleContainerQuery;
.
stage:SimpleContainerQuery a elmo:Query;
	elmo:query '''
		construct {?s?p?o}
		where {
			graph <http://localhost:8080/container/simple> {
				?s?p?o
			}
		}
	''';
.

stage:SimpleContainerConcepts a elmo:Representation;
	elmo:url-pattern "/query/simple-container-concepts$";
	elmo:query '''
		select ?concept ?concept_label ?definition
		where {
			graph <http://localhost:8080/container/simple> {
				?concept rdf:type skos:Concept.
				?concept rdfs:label ?concept_label.
				?concept skos:definition ?definition.
				FILTER (lang(?concept_label)="" or lang(?concept_label)="@LANGUAGE@")
			}
		}
	''';
.

stage:SimpleContainerContent a elmo:Representation;
	elmo:url-pattern "/query/simple-container-content$";
	elmo:query '''
		construct {?s?p?o}
		where {
			graph <http://localhost:8080/container/simple> {
				?s?p?o
			}
		}
	''';
.

stage:SimpleContainerContentYed a elmo:Representation;
	elmo:url-pattern "/query/simple-container-content.yed$";
	elmo:fragment [
		elmo:applies-to "CLASS";
		yed:backgroundColor "#00FFFF";
	];
	elmo:fragment [
		elmo:applies-to "DOC";
		yed:backgroundColor "#A0A0A0";
	];
	elmo:fragment [
		elmo:applies-to "CONCEPT";
		yed:backgroundColor "#FFFF00";
	];
	elmo:query '''
    prefix elmo: <http://bp4mc2.org/elmo/def#>
		construct {
      ?s?p?o.
      ?s elmo:style ?style
    }
		where {
			graph <http://localhost:8080/container/simple> {
				?s?p?o
			}
      optional {
        graph <http://localhost:8080/container/simple> {
          ?s rdf:type ?namedclass
        }
        graph <@STAGE@> {
          ?namedclass elmo:style ?style
        }
      }
		}
	''';
.
owl:Class elmo:style "CLASS".
rdfs:Class elmo:style "CLASS".
foaf:Document elmo:style "DOC".
foaf:Image elmo:style "DOC".
skos:Concept elmo:style "CONCEPT".
gn:Code elmo:style "CONCEPT".

stage:SimpleContainerTotalGraph a elmo:Representation;
  elmo:url-pattern "/query/simple-container-total-graph.yed$";
  elmo:fragment [
    elmo:applies-to "RESOURCE";
    yed:nodeType "com.yworks.flowchart.start1";
  ];
  elmo:query '''
    prefix elmo: <http://bp4mc2.org/elmo/def#>
    construct {
      ?s ?p ?o.
      ?s elmo:style "RESOURCE".
      ?o elmo:style "RESOURCE".
      ?s rdf:type ?stype.
      ?o rdf:type ?otype.
      ?s ?pl _:1.
      _:1 rdfs:label ?ol.
      _:1 rdf:type rdfs:Literal
    }
    where {
        graph <http://localhost:8080/container/simple> {
          {
            ?s rdf:type ?stype.
            ?s ?p ?o.
            ?o rdf:type ?otype
          }
          UNION
          {
            ?s ?pl ?ol
            FILTER (isLiteral(?ol))
          }
        }
    }
  ''';
.

stage:SimpleContainerGeo a elmo:Representation;
	elmo:url-pattern "/query/simple-container-geo$";
	elmo:appearance elmo:GeoAppearance;
	elmo:query '''
		prefix geosparql: <http://www.opengis.net/ont/geosparql#>
		prefix brt: <http://brt.basisregistraties.overheid.nl/def/top10nl#>
		prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
		prefix elmo: <http://bp4mc2.org/elmo/def#>
		prefix vcard: <http://www.w3.org/2006/vcard/ns#>
		construct {
			?p rdfs:label ?label.
			?p geo:geometry ?wkt
		}
		where {
			graph <http://localhost:8080/container/simple> {
				?p rdfs:label ?label.
				?p vcard:hasAddress/geosparql:hasWKT ?wkt
			}
		}
	'''
.
