@prefix elmo: <http://bp4mc2.org/elmo/def#>.
@prefix html: <http://www.w3.org/1999/xhtml/vocab#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix void: <http://rdfs.org/ns/void#>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix stage: <http://localhost:8080/data2model/stage#>.

stage:Scheme a elmo:Representation;
  elmo:url-pattern "/query/scheme(|.ttl|.json|.xml)$";
  elmo:contains stage:Menu;
  elmo:query '''
    PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
    CONSTRUCT {
      ?begrip rdfs:label ?begriplabel.
      ?begrip a skos:Concept.
      ?begrip ?rel ?relbegrip.
      ?begrip skos:inScheme ?scheme.
      ?begrip ?begripprop ?begripobj.
      ?scheme a skos:ConceptScheme.
      ?scheme ?schemeprop ?schemeobj.
    }
    WHERE {
      GRAPH <http://localhost:8080/data2model/container/scheme> {
        ?begrip a skos:Concept.
        ?begrip rdfs:label ?begriplabel.
        OPTIONAL {
          ?begrip ?rel ?relbegrip.
          ?relbegrip a skos:Concept.
        }
        OPTIONAL {
          ?begrip skos:inScheme ?scheme.
          ?scheme ?schemeprop ?schemeobj.
        }
        OPTIONAL {
          ?begrip ?begripprop ?begripobj.
          FILTER (isLiteral(?begripobj))
        }
      }
    }
  ''';
.

stage:YedScheme a elmo:Representation;
  elmo:url-pattern "/query/scheme.yed$";
  elmo:contains stage:Menu;
  elmo:query '''
    PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
    CONSTRUCT {
      ?begrip rdfs:label ?begriplabel.
      ?begrip a skos:Concept.
      ?begrip ?rel ?relbegrip.
      ?begrip rdfs:comment ?comment.
      ?begrip rdfs:comment ?definition.
      ?relbegrip a skos:Concept.
      ?relbegrip rdfs:label ?relbegriplabel.
    }
    WHERE {
      GRAPH <http://localhost:8080/data2model/container/scheme> {
        ?begrip a skos:Concept.
        ?begrip rdfs:label ?begriplabel.
        OPTIONAL {
          ?begrip ?rel ?relbegrip.
          ?relbegrip a skos:Concept.
          ?relbegrip rdfs:label ?relbegriplabel.
        }
        OPTIONAL {
          ?begrip rdfs:comment ?comment
        }
        OPTIONAL {
          ?begrip skos:definition ?definition
          FILTER NOT EXISTS {?begrip rdfs:comment ?comment}
        }
      }
    }
  ''';
.

stage:WebScheme a elmo:Representation;
  elmo:url-pattern "/query/webscheme$";
  elmo:contains stage:Menu;
  elmo:contains stage:WebScheme_tree;
  elmo:contains stage:WebScheme_schemas;
  elmo:contains stage:WebScheme_collections;
.

stage:WebScheme_tree a elmo:Part;
  elmo:appearance elmo:TreeAppearance;
  elmo:query '''
    CONSTRUCT {
      ?begrip skos:inScheme ?kader.
      ?begrip rdfs:label ?blabel.
      ?kader rdfs:label ?klabel.
      ?kader rdf:value ?kcount.
      ?begrip skos:broader ?parent.
      ?parent rdfs:label ?plabel.
    }
    WHERE {
      GRAPH <http://localhost:8080/data2model/container/scheme> {
        <@SUBJECT@> a ?t.
      }
      GRAPH <http://localhost:8080/data2model/container/scheme> {
        {
          select ?kader ?klabel (count(?cpt) as ?kcount)
          where {
            ?kader a skos:ConceptScheme.
            ?kader rdfs:label ?klabel.
            optional {
              ?cpt skos:inScheme ?kader
            }
          }
        }
        UNION
        {
          select ?begrip ?blabel (<urn:notinscheme> as ?kader) ("???" as ?klabel)
          where {
            ?begrip a skos:Concept.
            ?begrip rdfs:label ?blabel.
            FILTER NOT EXISTS {
              ?begrip skos:inScheme ?o.
            }
            FILTER NOT EXISTS {
              ?begrip skos:broader ?parent.
              ?parent a skos:Concept.
            }
          }
        }
        UNION
        {
          ?begrip a skos:Concept.
          ?begrip rdfs:label ?blabel.
          ?begrip skos:inScheme ?kader.
          ?kader a skos:ConceptScheme.
          FILTER NOT EXISTS {
            ?begrip skos:broader ?parent.
          }
        }
        UNION
        {
          ?begrip a skos:Concept.
          ?begrip rdfs:label ?blabel.
          ?begrip skos:broader ?parent.
          ?parent a skos:Concept.
          ?parent rdfs:label ?plabel.
        }
      }
    }
  ''';
.

stage:WebScheme_schemas a elmo:Part;
  elmo:index "1";
  elmo:appearance elmo:ShortTableAppearance;
  elmo:fragment [
    elmo:applies-to "kader";
    rdfs:label "Begrippenkader"@nl;
    rdfs:label "Concept scheme"@en;
  ];
  elmo:query '''
    SELECT ?kader ?kader_label (count(?begrip) as ?kader_count)
    WHERE {
      GRAPH <http://localhost:8080/data2model/container/scheme> {
        ?kader a skos:ConceptScheme.
        ?kader rdfs:label ?kader_label.
        OPTIONAL {
          ?begrip skos:inScheme ?kader
        }
      }
    }
    GROUP BY ?kader ?kader_label
    ORDER BY ucase(?kader_label)
  ''';
.

stage:WebScheme_collections a elmo:Part;
  elmo:index "2";
  elmo:appearance elmo:ShortTableAppearance;
  elmo:fragment [
    elmo:applies-to "collectie";
    rdfs:label "Collectie"@nl;
    rdfs:label "Collection"@en;
  ];
  elmo:query '''
    SELECT ?collectie ?collectie_label (count(?begrip) as ?collectie_count)
    WHERE {
      GRAPH <http://localhost:8080/data2model/container/scheme> {
        ?collectie a skos:Collection.
        ?collectie rdfs:label ?collectie_label.
        OPTIONAL {
          ?collectie skos:member ?begrip
        }
      }
    }
    GROUP BY ?collectie ?collectie_label
    ORDER BY ucase(?collectie_label)
  ''';
.

stage:TableScheme a elmo:Representation;
  elmo:url-pattern "/query/tablescheme(|.csv|.json|.xml)$";
  elmo:contains stage:Menu;
  elmo:fragment [
    elmo:applies-to "concept";
    rdfs:label "Concept"@nl;
    rdfs:label "Concept"@en;
  ];
  elmo:fragment [
    elmo:applies-to "definition";
    rdfs:label "Definitie"@nl;
    rdfs:label "Definition"@en;
  ];
  elmo:query '''
    SELECT ?concept ?concept_label ?definition
    WHERE {
      GRAPH <http://localhost:8080/data2model/container/scheme> {
        ?concept a skos:Concept.
        ?concept rdfs:label ?concept_label.
        OPTIONAL {
          ?concept skos:definition ?definition
        }
      }
    }
  '''
.

stage:SchemeUMLTrace a elmo:Representation;
  elmo:url-pattern "/query/scheme-uml-trace$";
  elmo:contains stage:Menu;
  elmo:query '''
    PREFIX uml: <http://schema.omg.org/spec/UML/2.1.1#>
    PREFIX dct: <http://purl.org/dc/terms/>
    PREFIX ea: <http://www.sparxsystems.com/extender/EA6.5#>
    SELECT ?stereotype (?item as ?type) (strafter(str(?typeuri),"#") as ?type_label) ?context ?concept ?concept_label ?term ?definitie
    WHERE {
      GRAPH <http://localhost:8080/data2model/container/scheme> {
        ?concept a skos:Concept.
        ?concept rdfs:label ?concept_label.
        ?concept dct:source ?item.
        OPTIONAL {
          ?concept skos:altLabel ?term
        }
        OPTIONAL {
          ?concept skos:definition ?definitie
        }
      }
      GRAPH <http://localhost:8080/data2model/container/data> {
        ?item a ?typeuri.
        OPTIONAL {
          ?item ea:stereotype ?stereotype.
        }
        OPTIONAL {
          ?owner (uml:ownedAttribute|uml:packagedElement) ?item.
          ?owner rdfs:label ?context
        }
      }
    }
  ''';
.
