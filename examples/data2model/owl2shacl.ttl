@prefix localupdatestage: <http://localhost:8080/data2model/update/>.
@prefix updatestage: <http://linkeddata.ordina.nl/data2model/update/>.
@prefix stage: <http://localhost:8080/data2model/stage#>.
@prefix elmo: <http://bp4mc2.org/elmo/def#>.
@prefix html: <http://www.w3.org/1999/xhtml/vocab#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.

#Production for local installations
localupdatestage:owl2shacl a elmo:Production;
	elmo:contains stage:HeaderAppearance;
	elmo:contains stage:Menu;
	elmo:contains stage:owl2shacl_scene1;
	elmo:contains stage:owl2shacl_scene2;
	elmo:contains stage:owl2shacl_scene3;
	elmo:contains stage:owl2shacl_scene4;
	elmo:contains stage:owl2shacl_scene5;
.

#Production for server installations
updatestage:owl2shacl a elmo:Production;
	elmo:contains stage:HeaderAppearance;
	elmo:contains stage:Menu;
	elmo:contains stage:owl2shacl_scene1;
.

stage:owl2shacl_scene1 a elmo:Scene;
	elmo:index "01";
	rdfs:label "Add sh:NodeShape to every owl:Class";
	elmo:query '''
		PREFIX sh: <http://www.w3.org/ns/shacl#>
		PREFIX owl: <http://www.w3.org/2002/07/owl#>
		insert into <http://localhost:8080/data2model/container/model> {
			?c a sh:NodeShape.
			?c sh:targetClass ?c.
			?c sh:name ?name
		}
		WHERE {
			SELECT ?c (strafter(str(?c),"#") as ?name)
			WHERE {
				graph <http://localhost:8080/data2model/container/model> {
					?c a owl:Class.
				}
			}
		}
	''';
.

stage:owl2shacl_scene2 a elmo:Scene;
	elmo:index "02";
	rdfs:label "Add sh:PropertyShape to every owl:Restriction";
	elmo:query '''
		PREFIX sh: <http://www.w3.org/ns/shacl#>
		PREFIX owl: <http://www.w3.org/2002/07/owl#>
		insert into <http://localhost:8080/data2model/container/model> {
			?c sh:property ?pshape.
			?pshape
				a sh:PropertyShape;
				sh:path ?property;
				sh:name ?pname;
				sh:minCount ?mincard;
				sh:maxCount ?maxcard;
				sh:minCount ?card;
				sh:maxCount ?card;
				sh:class ?class;
				sh:datatype ?datatype
		}
		WHERE {
			SELECT ?c ?property (iri(concat(str(?c),".",strafter(str(?property),"#"))) as ?pshape) (strafter(str(?property),"#") as ?pname) ?mincard ?maxcard ?card ?class ?datatype
			WHERE {
				graph <http://localhost:8080/data2model/container/model> {
					{
						?c rdfs:subClassOf ?sub.
						?sub owl:onProperty ?property.
						OPTIONAL {?sub owl:minCardinality ?mincard}
						OPTIONAL {?sub owl:maxCardinality ?maxcard}
						OPTIONAL {?sub owl:cardinality ?card}
						OPTIONAL {?sub owl:allValuesFrom ?class}
					}
					UNION
					{
						?c rdfs:subClassOf ?sub.
						?sub owl:onProperty ?property.
						OPTIONAL {
							?property rdfs:range ?class.
							?class a owl:Class
						}
					}
				}
			}
		}
	''';
.

stage:owl2shacl_scene3 a elmo:Scene;
	elmo:index "03";
	rdfs:label "Add sh:PropertyShape to every rdfs:domain/rdfs:range (might result in overlap with previous!)";
	elmo:query '''
		PREFIX sh: <http://www.w3.org/ns/shacl#>
		PREFIX owl: <http://www.w3.org/2002/07/owl#>
		INSERT INTO <http://localhost:8080/data2model/container/model> {
			?c sh:property ?pshape.
		  ?pshape
				a sh:PropertyShape;
				sh:path ?property;
				sh:name ?pname;
				sh:class ?class;
				sh:datatype ?datatype
		}
		WHERE {
			SELECT ?c ?property (iri(concat(str(?c),".",strafter(str(?property),"#"))) as ?pshape)(strafter(str(?property),"#") as ?pname) ?class ?datatype
			WHERE {
				graph <http://localhost:8080/data2model/container/model> {
					?property rdfs:domain ?c.
					OPTIONAL {
						?property rdfs:range ?class.
						?class a owl:Class
					}
					OPTIONAL {
						?property rdfs:range ?datatype.
						FILTER NOT EXISTS {?datatype a owl:Class}
					}
				}
			}
		}
	''';
.

stage:owl2shacl_scene4 a elmo:Scene;
	elmo:index "04";
	rdfs:label "Add rdfs:label for propertyshape from property";
	elmo:query '''
		PREFIX sh: <http://www.w3.org/ns/shacl#>
		PREFIX owl: <http://www.w3.org/2002/07/owl#>
		INSERT INTO <http://localhost:8080/data2model/container/model> {
			?pshape rdfs:label ?label
		}
		WHERE {
			graph <http://localhost:8080/data2model/container/model> {
				?pshape sh:path ?property.
				?property rdfs:label ?label
			}
		}
	''';
.

stage:owl2shacl_scene5 a elmo:Scene;
	elmo:index "05";
	rdfs:label "Add dummy property to force show of classes";
	elmo:query '''
		PREFIX sh: <http://www.w3.org/ns/shacl#>
		PREFIX owl: <http://www.w3.org/2002/07/owl#>
		INSERT INTO <http://localhost:8080/data2model/container/model> {
			?c sh:property [
				sh:path []
			]
		}
		WHERE {
			graph <http://localhost:8080/data2model/container/model> {
				?c a owl:Class.
				FILTER NOT EXISTS {
					?c sh:property ?p
				}
			}
		}
	''';
.
